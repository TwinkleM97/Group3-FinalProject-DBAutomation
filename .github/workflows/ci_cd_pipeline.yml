name: Database CI/CD Pipeline

on:
  push:
  workflow_dispatch:

jobs:
  mysql-ci:
    runs-on: ubuntu-latest
    timeout-minutes: 20

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD || 'Secret5555' }}
          MYSQL_DATABASE: project_db
        ports:
          - 3306:3306
        # Do NOT override entrypoint.
        options: >-
          --name automated-mysql-server
          --health-cmd="mysqladmin ping -h 127.0.0.1 -uroot -p$${MYSQL_ROOT_PASSWORD}"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=15
          --health-start-period=20s

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install mysql client & deps
        run: |
          sudo apt-get update
          sudo apt-get install -y mysql-client
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Write mysql.cnf from GitHub Secret
        run: |
          mkdir -p .secrets
          cat > .secrets/mysql.cnf <<'EOF'
          [client]
          host=127.0.0.1
          user=root
          password=${{ secrets.MYSQL_ROOT_PASSWORD || 'Secret5555' }}
          port=3306
          database=project_db
          EOF

      - name: Wait for DB
        run: |
          for i in $(seq 1 60); do
            if mysql --defaults-extra-file=.secrets/mysql.cnf -e "SELECT 1;" >/dev/null 2>&1; then
              echo "MySQL is up"; exit 0
            fi
            sleep 2
          done
          echo "MySQL did not become ready in time"
          docker ps -a
          docker logs automated-mysql-server || true
          exit 1

      - name: Initial Schema Deployment
        run: |
          mysql --defaults-extra-file=.secrets/mysql.cnf < sql/01_create_climatedata.sql

      - name: Schema Update (add humidity)
        run: |
          mysql --defaults-extra-file=.secrets/mysql.cnf < sql/02_add_humidity.sql

      - name: Data Seeding
        run: |
          mysql --defaults-extra-file=.secrets/mysql.cnf < sql/03_seed_data.sql

      - name: Concurrent Query Execution (Python)
        run: |
          python scripts/multi_thread_queries.py --config .secrets/mysql.cnf | tee pipeline_run.log

      - name: Validation
        run: |
          echo "== Table structure =="
          mysql --defaults-extra-file=.secrets/mysql.cnf -e "USE project_db; DESCRIBE ClimateData;"
          echo "== Columns check =="
          mysql --defaults-extra-file=.secrets/mysql.cnf -e "USE project_db; SHOW COLUMNS FROM ClimateData LIKE 'humidity';"
          echo "== Counts =="
          mysql --defaults-extra-file=.secrets/mysql.cnf -e "USE project_db; SELECT COUNT(*) AS total_rows FROM ClimateData;"
          echo "== Sample hot rows =="
          mysql --defaults-extra-file=.secrets/mysql.cnf -e "USE project_db; SELECT location, record_date, temperature, humidity FROM ClimateData WHERE temperature > 20 ORDER BY record_date DESC LIMIT 10;"

      - name: Upload pipeline logs
        uses: actions/upload-artifact@v4
        with:
          name: pipeline-logs
          path: pipeline_run.log
